---
title: "Project Feedback"
author: "Andrew Ker, Bipin Poudel, Paulus Hermanto"
format: html
editor: visual
---

## Introduction
Have you ever seen a baseball player smack a home run on tv, with the launch angle, distance traveled, and exit velocity immediately depicted on screen?
Have you ever wondered how ESPN comes up with interesting statistics and factoids to display on screen?
Or maybe you've seen betting odds for sporting events and questioned how those odds are set.
Even if you're not interested in sports, chances are, you've encountered some type of data related to or pertaining to sports.
If not, it's highly likely that you'll encounter sports data in the future. The world of data is constantly getting bigger and bigger, with increasing numbers of applications, including in sports.
In fact, using data or employing quantitative methods in sports is so popular, there's an entire field of statistics dedicated to it, called sports analytics.
In the field of sports analytics, experts, often statisticians or data scientists, use data and employ quantitative methods to evaluate player performance, analyze player safety, predict outcomes of games, set betting odds, and develop in-game strategies, among other things.
Sports teams and organizations also use analysis to make business decisions, while the public, can use the sports analytics to play fantasy sports, make bets, or provide evidence to help win arguments about whose favorite team is better.
On account of the fact that American football is the most popular sport in the U.S., in this paper, we will try to analyze the performance of NFL Teams.

To provide a little bit of context, the National Football League (NFL) is an American football league, consisting of 32 teams.
Each team belongs to either AFC (American Football Conference), or NFC (National Football Conference); and there are 16 teams in each conference.
Conferences are further broken down into divisions (North, South, East, and West). For a full list of current teams, please see the table below.

| AFC                  |   NFC                 |
|----------------------|-----------------------|
| **East**             |         **East **     |
| New England Patriots |   Dallas Cowboys      |
|New York Jets         |   Philadelphia Eagles |
|Miami Dolphins        | Washington Commanders |
|Buffalo Bills         | New York Giants       |
|**North**             |          **North**    |
| Cincinnati Bengals   |   Green Bay Packers   |
| Pittsburgh Steelers  | Chicago Bears         |
| Baltimore Ravens     | Minnesota Vikings     |
| Cleveland Browns     | Detroit Lions         |
| **West**             | **West**              |
| Denver Broncos       | Seattle Seahawks      |
| Kansas City Chiefs   | San Francisco 49ers   |
| Los Angeles Chargers | Los Angeles Rams      |
| Las Vegas Raiders    | Arizona Cardinals     |
|**South **            | **South**             |
| Indianapolis Colts   | New Orleans Saints    |
| Tennessee Titans     | Atlanta Falcons       |
| Houston Texans       | Carolina Panthers     |
| Jacksonville Jaguars | Tampa Bay Buccaneers  |

**Note:** The data set covers the years 2000 through 2019. In that span, the Houston Texans were added as a team (2002), and there have been multiple changes of location.
This includes the Los Angeles Chargers (formerly San Diego Chargers), Las Vegas Raiders (formerly Oakland Raiders), and the Los Angeles Rams (formerly St. Louis Rams).

**Note:** This current format with conferences and divisions was implemented beginning in the 2002 season with the addition of the Houston Texans.

For the majority of the time this data set spans, the NFL season consisted of four weeks of a preseason in which games don't count in the standings.
The preseason was followed by a 17-week regular season, where teams played 16 games and had one bye week (one week during the course of the season where they don't play a game).
After the end of the regular season, six teams from each conference (four division winners in each conference and two wild card teams) advance to the playoffs.
The teams were seeded 1-6 in each conference, where the four division winners constituted seeds 1-4, and the wild card teams constituting seeds 5 and 6.
The first round of the playoffs is called the wild card round. In this round of the playoffs, the 6 seed plays on the road against the 3 seed in each conference, and the 5 seed plays on the road against the 4 seed in each conference.
Seeds 1 and 2 in each conference received a bye week for the wild card round.
The next round of the playoffs is the divisional round, in which the winners of the wild card round visit the 1 and 2 seeds, with the lowest-seeded wild card winner playing the 1 seed and the highest-seeded wild card winner playing the 2 seed.
The winners of the divisional round then play each other in the conference championships, hosted by the highest remaining seed.
The winners of conference championships then play each other in the Super Bowl, which is played at a predetermined neutral location.

**Note:** In 2021, the NFL implemented several changes to the season.
The current regular season now consists of a three-week preseason, followed by 18 weeks of the regular season.
Teams now play 17 games during the regular season.
The playoff format was also changed, to add an extra wild card team and remove the bye week for the 2 seed in each conference.
This added an extra wild card round game between the 7 seed visiting the 2 seed.

**Note:** In 2000 and 2001, the NFL had different conferences and divisions, so the playoffs included the three division winners in each conference and three wild card rounds.

### Data

The data was originally gathered by Pro Football Reference. The data was stored in NFL Scores Main Page under All Game Scores ([data](https://www.pro-football-reference.com/boxscores/game-scores.htm)). The data was used for a tidytuesday project in 2020 ([data](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-02-04/readme.md#gamescsv)) that primarily focused on NFL attendance. The data used for this report was found using the tidytuesday link.

The data we are using in this project comes in the format of a .csv file. The spreadsheet contains football games played by NFL teams from year 2000-2019. This data originally contained 19 variables related to NFL game scores and outcomes. Out of these 19 variables, 11 were character variables, seven were numeric variables, and one was a time variable. In order to meet project specifications, a categorical variable was needed. To derive a categorical variable, a loop was utilized to replace values of "NA" with a string "0" in the tie column and replace team names with a string "1". This also helped to clean the data, since it does not make sense to list a team winner for a game that ended with a tie. After this loop, the strings of "0" and "1" were converted to a categorical variable. This process essentially created a categorical variable with a value of 0 if an NFL game ended with one team winning and a value of 1 if an NFL game ended in a tie.

```{r setup, include = FALSE}
knitr::opts_chunk$set(echo = TRUE)

# load in the data
footballgames <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-04/games.csv')
```

```{r, echo = FALSE, warning = FALSE, results = 'hide'}
##### derive categorical variable #####
# replace NA's in tie column with string 0
footballgames$tie[is.na(footballgames$tie)] <- "0"
# replace ties with string 1 instead of string with team name
for(i in 1:5324){
  if(footballgames$tie[i] != "0"){
    footballgames$tie[i] <- "1"
    i < i+1
  }
  else{
    i <- i+1
  }
}

# treat tie as categorical
footballgames$tie <- as.factor(footballgames$tie)


# get structure to check if tie is not a factor
str(footballgames)

footballgames
```

After deriving the categorical variable, additional data cleaning was needed. The "winner" variable contains the name of the winning team; however, this still contained the name of the "winning" team even if the game ended in a tie. To clean this, another loop was utilized to replace the winning team's name with "tie" in the "winner" column, if the game ended in a tie. The code for this is shown below.

```{r, echo = FALSE, warning = FALSE, results = 'hide'}
# replace ties with string 1 instead of string with team name
for(i in 1:5324){
  if(footballgames$tie[i] == 1){
    footballgames$winner[i] <- "Tie"
    i < i+1
  }
  else{
    i <- i+1
  }
}

footballgames
```

Once the data was cleaned, it still had 19 variables, but with 10 character variables, seven numeric variables, one time variable, and one categorical variable. For more information about the data, please refer to the table below, which contains a list of variables, their descriptions, and their types.

| Variable Name  | Variable Description                                | Variable Type |
|-------------------|----------------------------------|-------------------|
| year           | The year in which the game was played               | numeric       |
| week           | The week of the season in which the game was played | character     |
| home_team      | name of the team playing at their home stadium      | character     |
| away_team      | name of the team playing at visiting stadium        | character     |
| winner         | name of the winning team                            | character     |
| tie            | indicates whether the game ended in a tie or not    | categorical   |
| day            | day of the week the game was played on              | character     |
| date           | date the game was played on                         | character     |
| time           | time of the day when the game started               | time          |
| pts_win        | points scored by the winning team                   | numeric       |
| pts_loss       | points scored by the losing team                    | numeric       |
| yds_win        | yards gained by the winning team                    | numeric       |
| turnovers_win  | turnovers committed by the winning team             | numeric       |
| yds_loss       | yards gained by the losing team                     | numeric       |
| turnovers_loss | turnovers committed by the losing team              | numeric       |
| home_team_name | name of the team playing at their home stadium      | character     |
| home_team_city | name of the home team's city                        | character     |
| away_team_name | name of the team playing at visiting stadium        | character     |
| away_team_city | name of the away team's city                        | character     |

## Exploratory Data Analysis

## Analysis

```{r, echo = FALSE, warning=FALSE}
library(tidyverse)
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
```

#### AFC or NFC, who is winning the most?

The National Football League (NFL) is a composition of two divisions AFC (American Football Conference) and NFC (National Football Conference). Here, the objective is to find out who have won most games (Home and Away) whenever an AFC team meets with a NFC team. In order to this, two new columns 'HT' and 'AT' is created to find out if the home and away playing team was AFC or NFC with reference from the list of AFC teams and NFC teams and the variables 'home_team' and 'away_team'. However, there were games that was played between AFC teams as well as NFC teams which we are not interested in. So, the data was filter out for only the matches between AFC and NFC teams. Out of 5324 games, only 1536 games were played between an AFC team and NFC team. The respective winning percentages for each division is then calculated and a bar plot of the same is created.

```{r, echo = FALSE, warning=FALSE}
####Calculating the percentages of AFC and NFC wins whenever they face each other.

library(dplyr)
#AFC vs NFC teams list
afc_teams<- c("Cleveland Browns","Baltimore Ravens","Pittsburgh Steelers","Cincinnati Bengals","Miami Dolphins","Buffalo Bills","New York Jets","New England Patriots", "Kansas City Chiefs","Los Angeles Chargers","Denver Broncos","Las Vegas Raiders","Tennessee Titans","Houston Texans","Indianapolis Colts","Jacksonville Jaguars")

nfc_teams<-c("Minnesota Vikings","Chicago Bears","Detroit Lions","Green Bay Packers","New York Giants","Dallas Cowboys","Washington Redskins","Philadelphia Eagles","Arizona Cardinals","Los Angeles Rams","Seatlle Seahawks","San Franscisco 49ers","Atlanta Falcons","Tampa Bay","Carolina Panthers ","New Orlean Saints")

#Create a new column 'HT' to find which was the home team: AFC or NFC

for (i in 1:5324){
  if(footballgames$home_team[i] %in% afc_teams){
    footballgames$HT[i]<- "AFC"
  }
  else{
    footballgames$HT[i]<-"NFC"
  }
}

table(footballgames$HT)


#Create a new column 'AT' to find which was the away team: AFC or NFC
for (i in 1:5324){
  if(footballgames$away_team[i] %in% afc_teams){
    footballgames$AT[i]<- "AFC"
  }
  else{
    footballgames$AT[i]<-"NFC"
  }
}

table(footballgames$AT)


#Find the games AFC team vs NFC team, home and away. 

afcvsnfc<- filter(footballgames, HT=="AFC" & AT=="NFC"| HT=="NFC" & AT=="AFC")

#Find out who won against AFC vs NFC only, home and away. 
for(i in 1:1536){
  if(afcvsnfc$winner[i]=="Tie"){
    afcvsnfc$win_team[i]="Tied"
    }
    else if(afcvsnfc$winner[i] %in% afc_teams){
    afcvsnfc$win_team[i]<- "AFC"
    }
    else{
    afcvsnfc$win_team[i]<- "NFC"
    }  
}

#Calculate the percentage of games won by NFC and AFC teams.
(table(afcvsnfc$win_team)/1536)*100

#Whenever, AFC played NFC either home or away:
#AFC won 53.6% of the games vs. NFC 46.1%. 3% of the games were ended in a tie. 

#Plot of AFC vs NFC playing each other only. 
plot4<-ggplot(data = afcvsnfc) +
  geom_bar(mapping = aes(x = win_team, fill=win_team,y = ..prop.., group=1, stat="identity"), stat="count")+xlab("Winning Team")+ylab("Winning Percentage %")+scale_y_continuous(labels = scales::percent, limits=c(0,1))
ggplotly(plot4)

```


#### Is there an Advantage to Playing at Home?

It's a common belief that playing any sport (including football) at home stadiums gives the home team an advantage over the visiting team. The results below aim to assess this belief. First, the number of games won by the home team and the number of games won by the road team are tallied. Based off this tally, there were 3,045 NFL games won by the home team from 2000-2019. Over this same stretch of time, there were 2,279 NFL games won by the away team. Clearly, the home team wins more often than the road team, but it is helpful to provide additional context. Since there were 5,324 games played, the home team has won 3,045/5,324 games for a percentage of 57%. This suggests that the home team wins NFL games about 57% of the time. It must be noted however, that these counts are not exact since the data lists a home team, even for games played at a neutral site.

```{r, echo = FALSE, warning=FALSE}
### Comparing the number of games won by the home team to the number of games won by the away team ###
library(tidyverse)
# create a vector of 0's
locationofwin <- rep(c(0), 5324)

# add vector of 0's to the data 
footballgames <- cbind(footballgames, locationofwin)

# for loop to assign values of 1 if the home team won the game
# values of 0 if the home team did not win the game
for(i in 1:5324){
  if(footballgames$winner[i] == footballgames$home_team[i]){
    footballgames$locationofwin[i] <- 1
    i < i+1
  }
  else{
    i <- i+1
  }
}

# count the number of wins by the home team and the number of losses/ties by the home team
table(footballgames$locationofwin)
# 3045
# 2279

# convert locationofwin to categorical
footballgames$locationofwin <- as.factor(footballgames$locationofwin)

# bar plot of games won by home team and games won by away team
footballgames %>%
  ggplot(aes(x = locationofwin, fill = locationofwin)) + 
  geom_bar() + 
  geom_text(stat='count', aes(label=..count..), vjust=0) + 
  ggtitle("Comparing Games Won by the Away Team to Games Won by the Home Team") +
    scale_fill_discrete(labels=c('Away Team Won', 'Home Team Won')) 

```

We can also compare how well teams perform when playing at home and on the road using other statistics in this data set, such as yards gained, points scored, and turnovers committed.

```{r, echo = FALSE, warning = FALSE, results = 'hide'}
# create for loop to create vector for home points and away points
# also create vectors for home and away turnovers and home and away yards
footballgames$homepts <- rep(c(0), 5324)
footballgames$awaypts <- rep(c(0), 5324)
footballgames$hometurnovers <- rep(c(0), 5324)
footballgames$awayturnovers <- rep(c(0), 5324)
footballgames$homeyds <- rep(c(0), 5324)
footballgames$awayyds <- rep(c(0), 5324)

for(i in 1:5324){
  if(footballgames$home_team[i] == footballgames$winner[i]){
    footballgames$homepts[i] <- footballgames$pts_win[i]
    footballgames$awaypts[i] <- footballgames$pts_loss[i]
    footballgames$hometurnovers[i] <- footballgames$turnovers_win[i]
    footballgames$awayturnovers[i] <- footballgames$turnovers_loss[i]
    footballgames$homeyds[i] <- footballgames$yds_win[i]
    footballgames$awayyds[i] <- footballgames$yds_loss[i]
    i <- i + 1
  }
  else if(footballgames$away_team[i] == footballgames$winner[i]){
    footballgames$homepts[i] <- footballgames$pts_loss[i]
    footballgames$awaypts[i] <- footballgames$pts_win[i]
    footballgames$hometurnovers[i] <- footballgames$turnovers_loss[i]
    footballgames$awayturnovers[i] <- footballgames$turnovers_win[i]
    footballgames$homeyds[i] <- footballgames$yds_loss[i]
    footballgames$awayyds[i] <- footballgames$yds_win[i]
    i <- i + 1
  }
  else{
    footballgames$homepts[i] <- footballgames$pts_win[i]
    footballgames$awaypts[i] <- footballgames$pts_loss[i]
    footballgames$hometurnovers[i] <- NA
    footballgames$awayturnovers[i] <- NA
    footballgames$homeyds[i] <- NA
    footballgames$awayyds[i] <- NA
  }
}

# create vectors to allow for plotting
homeawayvec <- c(rep(c("home"),5324),rep(c("away"),5324))
pts <- c(footballgames$homepts, footballgames$awaypts)
yds <- c(footballgames$homeyds, footballgames$awayyds)
turnovers <- c(footballgames$hometurnovers, footballgames$awayturnovers)

# create data frames for plotting
pts <- data.frame(pts, homeawayvec)
yds <- data.frame(yds, homeawayvec)
turnovers <- data.frame(turnovers, homeawayvec)

# treat vector of home and away as categorical
pts$homeawayvec <- as.factor(pts$homeawayvec)
yds$homeawayvec <- as.factor(yds$homeawayvec)
turnovers$homeawayvec <- as.factor(turnovers$homeawayvec)

# remove NA's
yds %>% na.omit()
turnovers %>% na.omit()

```

```{r, echo = FALSE, warning = FALSE}
# boxplot of yards gained by home and away teams
yds %>%
  ggplot(aes(y = yds, fill = homeawayvec)) + 
  geom_boxplot() + 
  ggtitle("Comparing Yards Gained by Away Teams to Yards Gained by the Home Team") +
    scale_fill_discrete(labels=c('Away Team', 'Home Team')) +
      xlab("Home or Away Team")
```

Gaining yards is definitely a positive result in football, since an offense needs to gain yards in order to score points. Gaining more yards also increases the probability of scoring a touchdown (worth six points) instead of kicking a field goal (worth three points).
Shown above are boxplots of the number of yards gained by the away team and the number of yards gained by the home team.
Based on the boxplots, it appears that home teams have a higher average number of yards gained, compared to away teams.
Additionally, the minimum amount of yards gained occurred for a road team instead of a home team, and the maximum amount of yards gained occurred for a home team.
It appears that the first quartile, median, and third quartile are all higher for home teams rather than away teams.
All in all, these boxplots support the belief that home teams have an advantage over road teams, but we should check these results as well.

A t test was conducted to compare the mean yards gained by home teams and the mean yards gained by away teams, with the results shown below.
This t test resulted in a p-value less than a significance level of 0.05.
This suggests that there's a difference in mean yards gained between home teams and away teams, at a 5% significance level.
```{r, echo = FALSE, warning = FALSE}
# conduct a t test to compare means
t.test(yds$yds ~ yds$homeawayvec)
```

While gaining yards is still a positive, yards don't always tell the full story of a football game.
Usually, gaining more yards than the other team is indicative of being a superior team, but it's always possible that a team outgains the other team, but still loses.
This is possible if one team's offense drives down the field and commits turnovers or scores a lot of field goals instead of touchdowns, as an example.

For this reason, we can also examine the number of points scored by home teams and away teams. Points are correlated with winning, but it still might reveal some interesting information about the number of points teams score at home and on the road.
Shown below are boxplots of points scored by home teams compared to points scored by away teams.
The first quartile, median, and third quartile all appear higher for home teams, and the mean points scored for home teams is higher than the mean points scored for road teams.
The maximum number of points scored in a football game from 2000-2019 was accomplished by a home team, but there are several 50 point games for both home and away teams.

```{r, echo = FALSE, warning = FALSE}
# boxplot of points scored by home and away teams
pts %>%
  ggplot(aes(y = pts, fill = homeawayvec)) + 
  geom_boxplot() + 
  ggtitle("Comparing Points Scored by the Away Team to Points Scored by the Home Team") +
    scale_fill_discrete(labels=c('Away Team', 'Home Team')) +
      xlab("Home or Away Team")
```

A t test was also conducted to compare the mean points scored for home teams to the mean points scored for away teams.
The results of this test are shown below.
Based on the results of this test, the p-value was less than our predetermined significance level of 0.05.
Thus, this suggests there's a difference in the mean number of points scored by home teams compared to away teams, at a 5% significance level.

```{r, echo = FALSE, warning = FALSE}
# conduct a t test to compare means
t.test(pts$pts ~ pts$homeawayvec)
```

It might have been easy to guess that home teams generally win more often than road teams, along with gaining more yards and scoring more points.
Committing turnovers could be a little different though.
Turnovers are a negative statistic in football, because turning the ball over ends an offense's possession of the ball and gives the other team possession.
Two types of turnovers are considered here; interceptions (the quarterback throws the ball, and the ball is caught by the defense), and fumbles (a player drops the ball before being tackled, and the opposing team picks it up).
Since turnovers are negative, we expect the mean number of turnovers committed to be lower for home teams than for away teams.

```{r, echo = FALSE, warning = FALSE}
# boxplot of turnovers committed by home and away teams
turnovers %>%
  ggplot(aes(y = turnovers, fill = homeawayvec)) + 
  geom_boxplot() + 
  ggtitle("Comparing Turnovers Committed by the Away Team to Turnovers Committed by the Home Team") +
    scale_fill_discrete(labels=c('Away Team', 'Home Team')) +
      xlab("Home or Away Team")
```

Shown above are boxplots of the number of turnovers committed for home teams and away teams. This boxplot looks much different than the previous boxplots.
The quartiles, mean, and median don't appear to be higher or lower for home or away teams, and there aren't any clear maximum or minimum values as in the other boxplots.
This could be due to the inherently low number of turnovers in a game, compared to points and yards, so the boxplots are checked with another t test.

Based on the results of this test (shown below), the p-value is 0.0101.
This is still less than our predetermined p-value of 0.05, which suggests there's a difference in the mean number of turnovers committed for home teams and away teams, at a 5% significance level.
Taking a look at the means reveals that the mean turnovers committed by road teams is 1.658073 while the mean turnovers committed by home teams is 1.590327.
While there was a statistically significant difference in the mean number of turnovers committed by home and away teams, there isn't much practical difference in these values.
This indicates that being the home or road team probably isn't the main reason why teams commit turnovers.
Instead, it could be the quality of team, the quality of several key players, or turnovers could just balance out between different teams, more indicative of luck than skill or talent.

```{r, echo = FALSE, warning = FALSE}
# conduct a t test to compare means
t.test(turnovers$turnovers ~ turnovers$homeawayvec)
```




#### Which AFC West teams will do well in the next season?

Fans and analysts are often trying to predict which games will be won and lost by their favorite teams.
As we have seen from the previous sections, NFL teams are divided into two conferences: AFC and NFC.
Both conferences are also divided into 4 divisions: North, South, West, and East.
Since one of our team members is a fan of the Denver Broncos (an AFC West Team), combined with the fact that some AFC West division teams have played the Superbowl 4 times over the past decade ([source]( https://en.wikipedia.org/wiki/List_of_Super_Bowl_champions)); we decided to analyze the pattern of percentage of wins for all teams of AFC West division and plot them as a way to check if there is a trend.
The games played by AFC West division teams can be found here ([source](https://phermanto2.shinyapps.io/project-we-r-pab/)).
By looking at the trend over the past 20 years, we hope that people can assess their past performance and try to predict their future performances.

If we were to use 30% as our cutoff percentage to determine whether the year is a bad year (or not), then we see that all four teams have at least one "bad year" where they won less than 30% of the games in each year, throughout 2000-2019.
For the Broncos, 2010 was their worst performing year, with 25% games won within that year. However, they win at least 30% of their games for the other nineteen years.
For the Chargers, they had gone through three bad years, where they won less than 30% of their games in 2000, 2003, and 2015.
For the Raiders, they have had 7 "bad" years over the course of 2000-2019; while the Chiefs had 4 individual years where they won less than 30% of their games (2007, 2008, 2009 and 2012).

```{r, echo = FALSE, warning = FALSE}
library(dplyr)
library(ggplot2)
library(stringr)
library(ggthemes)                             


#filtering out broncos games
broncosgames<-filter(footballgames, home_team == "Denver Broncos" | away_team == "Denver Broncos")

#number of games played each year
broncosplays<-broncosgames %>%
  group_by(`year`) %>%
  summarise(number_of_games = n())

#filtering out the games that the Broncos won
broncoswins<-filter(broncosgames, winner == "Denver Broncos")

#number of games won by the Broncos
broncosnumberofwins<-broncoswins %>%
  group_by(`year`) %>%
  summarise(number_of_wins = n())

#joining the tables before plotting and adding the winning ratio
broncosnumbers<-inner_join(broncosplays, broncosnumberofwins)
broncosnumbers<- 
  broncosnumbers %>% 
  mutate(winning_percentage = broncosnumbers$number_of_wins/broncosnumbers$number_of_games)

#plotting the ratio as line and plotting the tables
ggplot(data = broncosnumbers, aes(x = year, y = winning_percentage)) +
  labs(title = "Broncos' Percentage of Wins through 2000 - 2019",
         x = "Year",
         y = "Percentage of Wins") +
  geom_line(colour = 'orange') +
  geom_point(colour = 'orange') + 
  theme_stata()
```

```{r, echo = FALSE, warning = FALSE}
library(tsibble)
library(tidyverse)
library(fable)
library(lubridate)
library(ggplot2)
library(feasts)
library(ggfortify)

# Create a time series object 
broncosts <- broncosnumbers %>% 
  as_tsibble(index = year)

# Select the best ARIMA model automatically
fitwinpercentages <- broncosts %>%
  model(ARIMA(winning_percentage ~ PDQ(0,0,0)))
report(fitwinpercentages)

# Forecast and plot
fitwinpercentages %>% forecast(h = 3) %>% autoplot(broncosts, color = 'orange')

fitwinpercentagestrend <- broncosts %>%
model(TSLM(winning_percentage ~ trend()))
report(fitwinpercentagestrend)

# forecast and plot
fitwinpercentagestrend %>% forecast(h = 3) %>% autoplot(broncosts, color = 'orange')

# Time plot of winning percentage and predicted winning percentage with a trend model
augment(fitwinpercentagestrend) %>%
  ggplot(aes(x = year)) +
  geom_line(aes(y = winning_percentage, colour = "Data")) +
  geom_line(aes(y = .fitted, colour = "Fitted")) +
  labs(x = "Year", y = "Winning Percentage",
       title = "Winning Percentage vs Trended Winning Percentage")
```

```{r, echo = FALSE, warning = FALSE}
#filtering out chiefs games
chiefsgames<-filter(footballgames, home_team == "Kansas City Chiefs" | away_team == "Kansas City Chiefs")

#number of games played each year
chiefsplays<-chiefsgames %>%
  group_by(`year`) %>%
  summarise(number_of_games = n())

#filtering out the games that the Chiefs won
chiefswins<-filter(chiefsgames, winner == "Kansas City Chiefs")

#number of games won by the Chiefs
chiefsnumberofwins<-chiefswins %>%
  group_by(`year`) %>%
  summarise(number_of_wins = n())

#joining the tables before plotting and adding the winning ratio
chiefsnumbers<-inner_join(chiefsplays, chiefsnumberofwins)
chiefsnumbers<- 
  chiefsnumbers %>% 
  mutate(winning_percentage = chiefsnumbers$number_of_wins/chiefsnumbers$number_of_games)

#plotting the ratio as line and plotting the tables
ggplot(data = chiefsnumbers, aes(x = year, y = winning_percentage)) +
  labs(title = "Chiefs' Percentage of Wins through 2000 - 2019",
         x = "Year",
         y = "Percentage of Wins") +
  geom_line(colour = 'red') +
  geom_point(colour = 'red') +
  theme_stata()

```

```{r, echo = FALSE, warning = FALSE}
# packages already loaded in

# Create a time series object 
chiefsts <- chiefsnumbers %>% 
  as_tsibble(index = year)

# Select the best ARIMA model automatically
fitwinpercentages <- chiefsts %>%
  model(ARIMA(winning_percentage ~ PDQ(0,0,0)))
report(fitwinpercentages)

# Forecast and plot
fitwinpercentages %>% forecast(h = 3) %>% autoplot(chiefsts, color = 'red')

fitwinpercentagestrend <- chiefsts %>%
model(TSLM(winning_percentage ~ trend()))
report(fitwinpercentagestrend)

# forecast and plot
fitwinpercentagestrend %>% forecast(h = 3) %>% autoplot(chiefsts, color = 'red')
```

```{r, echo = FALSE, warning = FALSE}
#filtering out chargers games
chargersgames<-filter(footballgames, home_team == "San Diego Chargers" | away_team == "San Diego Chargers" | home_team == "Los Angeles Chargers" | away_team == "Los Angeles Chargers")

#number of games played each year
chargersplays<-chargersgames %>%
  group_by(`year`) %>%
  summarise(number_of_games = n())

#filtering out the games that the Chargers won
chargerswins<-filter(chargersgames, winner == "Los Angeles Chargers" | winner == "San Diego Chargers")

#number of games won by the Chiefs
chargersnumberofwins<-chargerswins %>%
  group_by(`year`) %>%
  summarise(number_of_wins = n())

#joining the tables before plotting and adding the winning ratio
chargersnumbers<-inner_join(chargersplays, chargersnumberofwins)
chargersnumbers<- 
  chargersnumbers %>% 
  mutate(winning_percentage = chargersnumbers$number_of_wins/chargersnumbers$number_of_games)

#plotting the ratio as line and plotting the tables
ggplot(data = chargersnumbers, aes(x = year, y = winning_percentage)) +
  labs(title = "Chargers' Percentage of Wins through 2000 - 2019",
         x = "Year",
         y = "Percentage of Wins") +
  geom_line(colour = 'blue') +
  geom_point(colour = 'blue') +
  theme_stata()
```

```{r, echo = FALSE, warning = FALSE}
# packages already loaded in

# Create a time series object 
chargersts <- chargersnumbers %>% 
  as_tsibble(index = year)

# Select the best ARIMA model automatically
fitwinpercentages <- chargersts %>%
  model(ARIMA(winning_percentage ~ PDQ(0,0,0)))
report(fitwinpercentages)

# Forecast and plot
fitwinpercentages %>% forecast(h = 3) %>% autoplot(chargersts, color = 'blue')

fitwinpercentagestrend <- chargersts %>%
model(TSLM(winning_percentage ~ trend()))
report(fitwinpercentagestrend)

# forecast and plot
fitwinpercentagestrend %>% forecast(h = 3) %>% autoplot(chargersts, color = 'blue')
```

```{r, echo = FALSE, warning = FALSE}
#filtering out chiefs games
raidersgames<-filter(footballgames, home_team == "Oakland Raiders" | away_team == "Oakland Raiders")

#number of games played each year
raidersplays<-raidersgames %>%
  group_by(`year`) %>%
  summarise(number_of_games = n())

#filtering out the games that the Raiders won
raiderswins<-filter(raidersgames, winner == "Oakland Raiders")

#number of games won by the Raiders
raidersnumberofwins<-raiderswins %>%
  group_by(`year`) %>%
  summarise(number_of_wins = n())

#joining the tables before plotting and adding the winning ratio
raidersnumbers<-inner_join(raidersplays, raidersnumberofwins)
raidersnumbers<- 
  raidersnumbers %>% 
  mutate(winning_percentage = raidersnumbers$number_of_wins/raidersnumbers$number_of_games)

#plotting the ratio as line and plotting the tables
ggplot(data = raidersnumbers, aes(x = year, y = winning_percentage)) +
  labs(title = "Raiders' Percentage of Wins through 2000 - 2019",
         x = "Year",
         y = "Percentage of Wins") +
  geom_line(colour = 'black') +
  geom_point(colour = 'black') +
  theme_stata()
```

```{r, echo = FALSE, warning = FALSE}
# packages already loaded in

# Create a time series object 
raidersts <- raidersnumbers %>% 
  as_tsibble(index = year)

# Select the best ARIMA model automatically
fitwinpercentages <- raidersts %>%
  model(ARIMA(winning_percentage ~ PDQ(0,0,0)))
report(fitwinpercentages)

# Forecast and plot
fitwinpercentages %>% forecast(h = 3) %>% autoplot(raidersts, color = 'black')

fitwinpercentagestrend <- raidersts %>%
model(TSLM(winning_percentage ~ trend()))
report(fitwinpercentagestrend)

# forecast and plot
fitwinpercentagestrend %>% forecast(h = 3) %>% autoplot(raidersts, color = 'black')
```

```{r, echo = FALSE, warning = FALSE}
#joining the tables together for all the teams and creating interactive plot for the teams
raidersnumbers<-raidersnumbers %>% 
  mutate(team_name = "Oakland Raiders")
chiefsnumbers<-chiefsnumbers %>% 
  mutate(team_name = "Kansas City Chiefs")
chargersnumbers<-chargersnumbers  %>% 
  mutate(team_name = "Los Angeles Chargers")
broncosnumbers<-broncosnumbers  %>% 
  mutate(team_name = "Denver Broncos")
combinedtables<-bind_rows(raidersnumbers, chiefsnumbers, chargersnumbers, broncosnumbers)

library(plotly)
finalplot<-ggplot(data = combinedtables, aes(x = year, color = team_name, y = winning_percentage)) +
  labs(title = "AFC West Percentage of Wins through 2000 - 2019",
         x = "Year",
         y = "Percentage of Wins",
       color = "Team Name") +
  geom_line() +
  geom_point() +
  scale_colour_manual(values = c("Oakland Raiders" = "black", "Kansas City Chiefs" = "red", "Los Angeles Chargers" = "blue", "Denver Broncos" = "orange")) +
  theme_stata()
ggplotly(finalplot)

```

Moving on to the "highs", we will look at years in which the teams win at least 60% of the games throughout 2000-2019.
From this point on, the focus will be to dissect each team's performance over the course of 20 years.
The Broncos had a good year in 2000, where they won more around 65% of their games, then started performing pretty decently (within 50%-60% games won) from 2001-2004.
They won approximately 78% of the games they played in 2005, and even won the Divisional Round.
However, it appears that their performance sharply declined within the next 5 years, leading up to their lowest year in 2010 where they won only 25% of the games in that year.
They successfully bounced back and had an impressive trajectory over the next 5 years, starting in 2011 when they won 50% of their games, then to consistently, over the next four years, won at least 70% of their games.
In 2013 and 2015, the Broncos managed to pull off victories in approximately 79% of their games; which are also signified by the team moving on to play the Superbowl in both years.
After winning the Superbowl in 2015, unfortunately, they did not have any good years from 2016-2019.

The Chargers started from the bottom at the year of 2000, when they won less than 10% of their games (they only won one game).
The team did not have any memorable years until after 2003.
Over the next 10 years, the trajectory of their wins to start toggling between average, good and even exceptional. Starting in 2004, where they had a noticeable comeback with 70% of games won in that year.
While the following year, 2005, might be considered to be unremarkably average to many (\~56% wins), the team was able to improve exceptionally in 2006 by winning more than 80% of their games.
The following years, the Chargers kept having "average" years (if we are only looking at winning percentages) with the exception of 2007 and 2009.
Surprisingly, in 2015, the team's performance plummeted when they won less than 30% of games that year.
They managed to come back stronger over the next 3 years, leading up to another impressive year in 2018 where they won approximately 72% of their games; but plummeted again the following year, in 2019, when they only won approximately 30% of the time.
All in all, while the Chargers never made it to the Superbowl; they had some pretty impressive years in 2006, 2009, 2018, where they made the Divisional round, and even won more than 70% of their games.

The team that stuck out the most from our observation is the Chiefs.
For the first 13 years, the Chiefs only had two years in which we consider to be good years: 2003 and 2005.
In both of those years, they managed to pull off 76% of wins and 63% of wins.
Other than those triumphant years, the team was either performing moderately, or extremely terribly.
Although 2007, 2008, 2009 and 2012 were terrible years for the Chiefs, they managed to turn it around starting from the following year, when they consistently won more games than lost.
In fact, the year 2012 can almost be seen as a turning point for the team since the team immediately won more than 60% of their games in 2013.
We also start seeing a slight upward trend for the Chiefs' winning percentages.
The plot above shows that the team has maintained high winning percentages over the past 6 years.
More impressively, the Chiefs even managed to win more than 70% of games in 2016, 2018, and 2019.
The year 2019 was also the year that the team won Superbowl LIV ([source](https://en.wikipedia.org/wiki/List_of_Super_Bowl_champions)).
While our data only shows games up to 2019, in reality, the team had a very strong track record throughout 2020-2022 as well ([source](https://www.espn.com/nfl/standings)), which some might have predicted from the successful streak in those previous years.

Lastly, the Raiders possess what could be seen as the least impressive track record out of the teams discussed so far.
The team started off strong from the year 2000-2002, where they won more than 60% of the games within those years.
After 2002, their winning percentages dropped significantly to below 30% in 2003.
The team did not significantly improve over the next 6 years.
A somewhat noteworthy improvement was made in 2010 and 2011 where they won 50% of games. However, the percentages plummeted again after unsatisfactory years: 2012, 2013, and 2014; as the team won below 30% of their games.
The team bounced back in 2015 and 2016; outstandingly, the team was able to reach 70% of wins in 2016.
The achievement, nevertheless, failed to last as their percentages plummeted again after the high in 2016 and failed to bounce back until the year of 2019.

Overall, we realize that it is difficult to predict wins solely based on visually looking trends of winning percentages, as there are other factors in place that are affecting team performances such as: players getting traded (roster changes), coaching styles (some coaches are more oriented towards offense/defense), game schedules, weather conditions, etc.
Furthermore, every team's performance on the AFC West Division has been extremely volatile, making it more difficult for their wins to be predictable and to observe stability of their performance in future years. Therefore, we decided to **CONTINUE ON THE TIME SERIES PART**


#### What does the number of wins at home looks like for AFC vs NFC teams?

Here we want to see who wins most games at home as a whole, NFC's teams or AFC's teams.
In order to achieve this, first NFC teams home games are filtered out from the original data set.
In this new dataset, a new column called 'win_div' is created that stores the result of the winning team's divison.
Then, the number of games won by each division teams whenever NFC played at home is calculated.
Similar steps are carried out whenever the AFC teams are playing at home. Finally, a side-by-side bar-plots are created for comparison.

```{r,echo = FALSE, warning = FALSE}
library(grid)
library(gridExtra)
#Number of games won at home by NFC teams whenever they played AFC teams.

###First create a data with home team being NFC team and away team being AFC team. 
homewin_nfc<-filter(footballgames, footballgames$home_team %in% nfc_teams & footballgames$away_team %in% afc_teams )

###To find out which division won when NFC played at home. 
for(i in 1:364){
  if(homewin_nfc$winner[i]=="Tie"){
     footballgames$win_div[i]<-"Tied"
  }
  else if(homewin_nfc$winner[i]%in% afc_teams){
    homewin_nfc$win_div[i]<-"AFC_Win"
  }
  else{
    homewin_nfc$win_div[i]<-"NFC_Win"  
  }
}

#Calculate the number of games won by NFC team at home.
table(homewin_nfc$win_div)

#Number of games won at home by AFC teams whenever they played NFC teams.

homewin_afc<-filter(footballgames, footballgames$home_team %in% afc_teams & footballgames$away_team %in% nfc_teams )

###To find out which division won when AFC played at home. 
for(i in 1:366){
  if(homewin_afc$winner[i]=="Tie"){
     homewin_afc$win_div[i]<-"Tied"
  }
  else if(homewin_afc$winner[i]%in% afc_teams){
    homewin_afc$win_div[i]<-"AFC_Win"
  }
  else{
    homewin_afc$win_div[i]<-"NFC_Win"  
  }
}
#Calculate the number of games won by AFC team at home.
table(homewin_afc$win_div)


#Bar plot for the number of games won by NFC team at home. 
plot_nfc_home<-homewin_nfc %>%
  ggplot(aes(x = win_div, fill = win_div)) + 
  geom_bar() + 
  geom_text(stat='count', aes(label=..count..), vjust=0) + 
  ggtitle("Number of games won by each divison's team when NFC played at home") +   xlab("Winning Division Team") +ylab("Number of games won")+guides(fill=guide_legend(title="Win Div"))+
    scale_fill_discrete(labels=c('AFC Win', 'NFC Win'))

#Bar plot for the number of games won by AFC team at home. 
plot_afc_home<-homewin_afc %>%
  ggplot(aes(x = win_div, fill = win_div)) + 
  geom_bar() + 
  geom_text(stat='count', aes(label=..count..), vjust=0) + 
  ggtitle("Number of games won by each divison's team when AFC played at home") +
  xlab("Winning Division Team") +ylab("Number of games won")+guides(fill=guide_legend(title="Win Div"))
    scale_fill_discrete(labels=c('AFC Win', 'NFC Win', 'Tied')) 

grid.arrange(plot_nfc_home,plot_afc_home, ncol=2)
```

#### Comparison of points for AFC and NFC teams playing each other.

Here, the objective is to compare who scored more points (AFC team vs NFC team) playing in their respective homes.
In order to do this, first, dataset that contains only games played at home of NFC teams and away for AFC teams (using 'homewin_nfc' data) is used.
Then, a box plot of the variable 'pts_win' is created based on 'win_div' for comparison.
Similar analyses is carried out for games played at home of AFC teams and away for NFC teams (using 'homewin_afc' data).
The games that are 'tied' are not included in the analyses.
Afterwards, the two separate plots created are displayed in the same panel for side-by-side comparison.
Finally, a summary table is also produced.

```{r,echo = FALSE, warning = FALSE}
pts_nfc_home<-ggplot(data=homewin_nfc, aes(x=win_div,y=pts_win, fill= win_div))+geom_boxplot() +xlab("Winning Division")+ylab("Points Won")+scale_y_continuous(limits = c(0, 60))+ggtitle("Points won by AFC Vs NFC teams at NFC's team home.")+ guides(fill=guide_legend(title="Win Div"))

ggplotly(pts_nfc_home)


pts_afc_home<- ggplot(data=filter(homewin_afc,winner!="Tie"))+geom_boxplot(aes(x=win_div,y=pts_win, fill= win_div))+xlab("Winning Division")+ylab("Points Won")+scale_y_continuous(limits = c(0, 60))+ggtitle("Points won by AFC Vs NFC teams at AFC's team home.")+ guides(fill=guide_legend(title="Win Div"))

ggplotly(pts_afc_home)

grid.arrange(pts_nfc_home, pts_afc_home ,ncol=2)

####Summary statistics of points when played at NFC home

tapply(homewin_nfc$pts_win, homewin_nfc$win_div, summary)

####Summary statistics of points when played at AFC home
homewin_afc_1<- filter(homewin_afc, win_div != "Tied")

tapply(homewin_afc_1$pts_win, homewin_afc_1$win_div, summary)
```

## Conclusion

## Future Ideas

## References
